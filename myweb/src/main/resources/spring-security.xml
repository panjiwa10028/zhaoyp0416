<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:s="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd"
	default-autowire="byType" default-lazy-init="true">

	<description>使用SpringSecurity的安全配置文件</description>

	<!-- http安全配置 -->
	<s:http auto-config="true" access-decision-manager-ref="accessDecisionManager">
		<s:form-login login-page="/login.action" default-target-url="/admin/main.action"
			authentication-failure-url="/login.action?error=true" />
		<s:logout logout-success-url="/" invalidate-session="true"/>
		<s:remember-me key="e37f4b31-0c45-11dd-bd0b-0800200c9a66" />
		
		<!-- 两个配置都只允许用户登录一次，exception-if-maximum-exceeded 默认为false，此值表示：
用户第二次登录时，前一次的登录信息都被清空。当exception-if-maximum-exceeded="true"时系统会拒
绝第二次登录。
		 -->
		<s:concurrent-session-control max-sessions="1" exception-if-maximum-exceeded="false" expired-url="/login.action?error=3"/>
	</s:http>
	<!-- 认证配置 -->
	<s:authentication-provider user-service-ref="userDetailsService">
		<!-- 可设置hash使用sha1或md5散列密码后再存入数据库 -->
		<s:password-encoder hash="md5">
			<s:salt-source user-property="username"/>
		</s:password-encoder>
	</s:authentication-provider>

	<!-- 项目实现的用户查询服务 -->
	<bean id="userDetailsService"
		class="com.yanpeng.ssweb.service.security.UserDetailServiceImpl" />
		
	<!-- 自定义过滤器,在数据库存储URL-授权  begin -->
	<bean id="filterSecurityInterceptor" class="org.springframework.security.intercept.web.FilterSecurityInterceptor">
		<s:custom-filter before="FILTER_SECURITY_INTERCEPTOR" />
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<property name="objectDefinitionSource" ref="databaseDefinitionSource" />
	</bean>

	<bean id="databaseDefinitionSource"
		class="com.yanpeng.ssweb.service.security.resource.DbFilterInvocationDefinitionSource" />
		<!-- 
		<bean id="databaseDefinitionSource"
		class="com.yanpeng.core.security.springsecurity.DefinitionSourceFactoryBean" />
	 -->
	
	<!-- 自定义过滤器,在数据库存储URL-授权  end -->

	<!-- 授权判断配置, 将授权名称的默认前缀由ROLE_改为A_. -->
	<bean id="accessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.vote.RoleVoter">
					<property name="rolePrefix" value="PER_" />
				</bean>
				<bean class="org.springframework.security.vote.AuthenticatedVoter" />
			</list>
		</property>
	</bean>
<!--JCaptcha验证码服务 -->

<bean id="captchaService" class="com.octo.captcha.service.multitype.GenericManageableCaptchaService"> 
  <constructor-arg index="0"><ref bean="imageEngine"/></constructor-arg> 
  <constructor-arg index="1" ><value>180</value></constructor-arg> 
  <constructor-arg index="2" type="int" ><value>180000</value></constructor-arg> 
   <constructor-arg index="3" type="int" ><value>75000</value></constructor-arg> 
</bean> 
<bean id="imageEngine" class="com.octo.captcha.engine.GenericCaptchaEngine"> 
  <constructor-arg index="0"> 
   <list> 
    <ref bean="CaptchaFactory"/> 
   </list> 
  </constructor-arg> 
</bean> 

<bean id="CaptchaFactory" class="com.octo.captcha.image.gimpy.GimpyFactory" > 
  <constructor-arg><ref bean="wordgen"/></constructor-arg> 
  <constructor-arg><ref bean="wordtoimage"/></constructor-arg> 
</bean> 

<bean id="wordgen" class= "com.octo.captcha.component.word.wordgenerator.DictionaryWordGenerator" > 
  <constructor-arg><ref bean="filedict"/></constructor-arg> 
</bean> 

<bean id="wordtoimage" class="com.octo.captcha.component.image.wordtoimage.ComposedWordToImage" > 
  <constructor-arg index="0"><ref bean="fontGenRandom"/></constructor-arg> 
  <constructor-arg index="1"><ref bean="backGenUni"/></constructor-arg> 
  <constructor-arg index="2"><ref bean="simpleWhitePaster"/></constructor-arg> 
</bean> 

<bean id="filedict" class="com.octo.captcha.component.word.FileDictionary" > 
  <constructor-arg index="0"><value>toddlist</value></constructor-arg> 
</bean> 

<bean id="fontGenRandom" class="com.octo.captcha.component.image.fontgenerator.RandomFontGenerator" > 
  <!-- 验证码字体最小值 --> 
  <constructor-arg index="0"><value>20</value></constructor-arg> 
  <!-- 验证码字体最大值 --> 
  <constructor-arg index="1"><value>24</value></constructor-arg> 
  <constructor-arg index="2"> 
   <list> 
    <ref bean="fontArial"/> 
   </list> 
  </constructor-arg> 
</bean> 

<bean id="fontArial" class="java.awt.Font" > 
  <constructor-arg index="0"><value>Arial</value></constructor-arg> 
  <constructor-arg index="1"><value>0</value></constructor-arg> 
  <constructor-arg index="2"><value>10</value></constructor-arg> 
</bean> 

<bean id="backGenUni" class="com.octo.captcha.component.image.backgroundgenerator.UniColorBackgroundGenerator" > 
  <!-- 验证码图片长度 --> 
  <constructor-arg index="0"><value>100</value></constructor-arg> 
  <!-- 验证码图片高度 --> 
  <constructor-arg index="1"><value>32</value></constructor-arg> 
</bean> 

<bean id="simpleWhitePaster" class="com.octo.captcha.component.image.textpaster.SimpleTextPaster" > 
  <!-- 验证码个数最小值 --> 
  <constructor-arg type="java.lang.Integer" index="0"> 
   <value>4</value> 
  </constructor-arg> 
  <!-- 验证码个数最大值 --> 
  <constructor-arg type="java.lang.Integer" index="1"> 
   <value>4</value> 
  </constructor-arg> 
  <!-- 验证码颜色 --> 
  <constructor-arg type="com.octo.captcha.component.image.color.ColorGenerator" index="2"> 
   <ref bean="singleColorGenerator"/> 
  </constructor-arg> 
</bean> 

<bean id="singleColorGenerator"
   class="com.octo.captcha.component.image.color.SingleColorGenerator">
   <constructor-arg type="java.awt.Color" index="0">
    <ref bean="colorGreen" />
   </constructor-arg>
</bean>
<bean id="colorGreen" class="java.awt.Color">
   <constructor-arg index="0" type="int">
    <value>0</value>
   </constructor-arg>
   <constructor-arg index="1" type="int">
    <value>0</value>
   </constructor-arg>
   <constructor-arg index="2" type="int">
    <value>255</value>
   </constructor-arg>
</bean>
</beans>